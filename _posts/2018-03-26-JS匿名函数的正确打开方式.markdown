---
layout:     post
title:      "JS匿名函数的正确打开方式"
subtitle:   "\"避免全局变量污染以及函数名冲突\""
date:       2018-03-26 21:00:00
author:     "stepday"
header-img: "img/post-bg-front.jpg"
catalog: true
tags:
    - JavaScript
---

## 前序
匿名，我想大家对这个名词并不陌生，匿名评论，匿名购买这样的日常用语很容易理解，就是不用取名或命名的就叫做匿名，于是匿名函数就是不用取名字的函数，也就意味着是需要立即执行的。如果不是立即执行的匿名函数【自执行函数】定义后是毫无意义的，因为不知道如何去调用它。

## 正文
匿名函数的两大优势：

1、避免全局变量污染；

```
(function(win){
    var name = "stepday";
    win.name = name;
})(window);
```
> 这里定义了一个匿名函数，函数体内定义了变量name并挂载到了window对象上，这样函数体外面是不能够使用此函数体内部的name变量的，因为这里已经形成了一个“块级作用域”，执行完毕后即可销毁【释放】。

2、避免函数名冲突；
> 由于匿名函数是没有名字的，所以就不会有函数命名覆盖冲突的问题存在。


## 总结
> 由于匿名函数可以介绍全局污染和函数名冲突，所以很对JS框架（jQuery等)均大量使用了匿名函数来进行编写。包括我们日常编写的jQuery插件也是以匿名函数的形式进行的，如下示例所示：

```
(function(obj){  
    /* 原先editor里边的内容 */  
    /* 里边有定义了自己的$标志 */  
  
    obj.editor = obj.editor || {};//如果没有editor对象，则生成一个空对象  
    obj.editor.$ = $;//把$挂在全局的editor对象上  
})(window); 
```
最近也在筹划编写一个公司自己的JS框架，大量运用到匿名函数也是在所难免，后期get到了新的技能和认识在不断完善进来，今天先写到这里了！




